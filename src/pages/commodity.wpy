<!-- pages/example.wpy -->
<style lang="less">
.commodity-container {
  width: 100%;
}
.swiper-container {
  width: 100%;
}
.swiper {
  width: 100%;
  height: 620rpx;
}
.swiper-image {
  width: 100%;
  height: 100%;
}
.swiper-container,
.price-container,
.title-container,
.details-container {
  display: flex;
  align-items: left;
  box-sizing: border-box;
  width: 100%;
  background-color: #ffffff;
  margin-bottom: 0rpx;
}
.title {
  padding-left: 15rpx;
  padding-right: 15rpx;
  padding-top: 10rpx;
  padding-bottom: 10rpx;
}
.title-container,
.price-container {
  background-color: #f5f5f5;
}
.price {
  font-weight: bold;
  color: red;
  font-size: 60rpx;
  padding-top: 10rpx;
}
.price-icon {
  font-weight: bold;
  color: red;
  padding-left: 15rpx;
  padding-top: 10rpx;
  display: flex;
  align-items: center;
  justify-content: bottom;
}
.details {
  padding-top: 10rpx;
}
.details-title {
  margin-left: 15rpx;
  margin-top: 10rpx;
}
.details-container {
  flex-direction: column;
  margin-top: 10rpx;
}
.bottom-button {
  display: flex;
  width: 100%;
}
.bottom-button button {
  border-radius: 0;
  width: 100%;
}
.bottom-button-container {
  display: flex;
  align-items: flex-end;
  width: 100%;
  height: 48px;
}
.cart-button {
  width: 38%;
}
.buy-button {
  width: 62%;
}
</style>

<template>
  <view class="container">
    <view class="commodity-container">
      <scroll-view
        class="items-scroll-view"
        scroll-y
        scroll-with-animation="true"
        style="height:{{windowHeight-48}}px;width:100%;"
      >
        <view class="swiper-container">
          <swiper
            class="swiper"
            indicator-dots
            autoplay
            interval="2000"
            duration="500"
          >
            <block
              wx:for="{{commodity.photos}}"
              wx:key="*this"
            >
              <swiper-item>
                <image
                  class="swiper-image"
                  src="{{item}}"
                  data-src="{{item}}"
                />
              </swiper-item>
            </block>
          </swiper>
        </view>
        <view class="price-container">
          <text class="price-icon">￥</text>
          <text class="price">{{priceRange}}</text>
        </view>
        <view class="title-container">
          <text class="title">{{commodity.name}}</text>
        </view>
        <view class="details-container">
          <text class="details-title">商品详情</text>
          <rich-text
            class="details"
            nodes="{{commodity.description}}"
          ></rich-text>
        </view>
      </scroll-view>

    </view>
    <view class="bottom-button-container">
      <van-button
        icon="cart-o"
        bind:click="onCartClick"
        class="bottom-button cart-button"
        type="warning"
      >购物车</van-button>
      <van-button
        bind:click="onBuyClick"
        class="bottom-button buy-button"
        type="primary"
      >购买</van-button>
    </view>
    <van-popup
      bind:close="onCloseBottomSheet"
      position="bottom"
      z-index="9999"
      show="{{ showBottomSheet }}"
    >
      <commoditybottomsheet
        @add-into-cart="addItemIntoCart"
        defaultCount="1"
        windowWidth="{{windowWidth}}"
        commoditiy="{{commodity}}"
      />
    </van-popup>
  </view>
</template>

<script>
import wepy from '@wepy/core';
import req from '../req';
import store from '../store';
import { buildPictureUrl } from '../utils/tools';
import { mapState, mapActions } from '@wepy/redux';
import { ADDINTOCART, REMOVEFROMCART } from '../store/types';

wepy.page({
  store,
  onShareAppMessage: function(res) {
    return {
      title: this.commodity.name,
      path: '/pages/commodity?id=' + this.commodity.id,
    };
  },
  onShow: function() {
    //wx.hideHomeButton();
  },
  data: {
    windowHeight: 0,
    windowWidth: 0,
    id: null,
    commodity: {
      photos: [],
    },
    commodityForCart: {},
    title: '商品名称',
    priceRange: '0-0',
    showBottomSheet: false,
  },
  onLoad({ id }) {
    var that = this;
    wx.getSystemInfo({
      success: function(res) {
        that.windowHeight = res.windowHeight;
        that.windowWidth = res.windowWidth;
      },
    });
    this.id = id;
    this.getCommodityInfo(id);
  },
  computed: mapState(['cart']),
  methods: {
    ...mapActions({
      addIntoCart: ADDINTOCART,
      removeFromCart: REMOVEFROMCART,
    }),
    onCartClick() {
      wx.switchTab({
        url: '/pages/cart',
      });
    },
    onBuyClick() {
      this.showBottomSheet = true;
    },
    onCloseBottomSheet() {
      this.showBottomSheet = false;
    },
    addItemIntoCart(commodity, sku, count) {
      this.addIntoCart({
        cartItem: {
          commodity,
          sku,
          count,
          checked: true,
        },
      });
      this.showBottomSheet = false;
    },
    setCommodityInfo(commodity) {
      commodity.photos = (commodity.photos || []).map((x) =>
        buildPictureUrl(x)
      );
      commodity.coverPhotos = (commodity.coverPhotos || []).map((x) =>
        buildPictureUrl(x)
      );
      commodity.photo = buildPictureUrl(commodity.photo);
      this.commodity = commodity;
    },
    getCommodityInfo(id) {
      wx.showLoading({ title: '请稍后...', icon: 'loading', mask: true });
      req.commodity
        .getDetails({
          id,
        })
        .then((res) => {
          if (res.success) {
            this.setCommodityInfo(res.commodity);
            this.priceRange = res.priceRange;
          } else {
            wx.showToast({ title: '信息获取失败', icon: 'none' });
          }
          wx.hideLoading();
        })
        .catch((e) => {
          wx.hideLoading();
          wx.showToast({ title: '信息获取失败', icon: 'none' });
        });
    },
  },
});
</script>

<config>
{
  "navigationBarTitleText": '商品详情',
    "usingComponents": {
      "van-cell": "~@/components/vant/cell/index",
      "van-cell-group": "~@/components/vant/cell-group/index",
      "van-button": "~@/components/vant/button",
      "van-image": "~@/components/vant/image/index",
      "commoditybottomsheet": "~@/components/commoditybottomsheet",
      "van-popup": "~@/components/vant/popup"
    }
}
</config>