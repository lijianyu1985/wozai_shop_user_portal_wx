<style lang="less">
@import '../components/vant/goods-action/index.wxss';
.classify {
  display: flex;
  position: relative;
  .classify_catetory {
    width: 200rpx;
    position: relative;
    z-index: 1;
    .name {
      text-align: center;
      height: 100rpx;
      line-height: 100rpx;
      font-size: 28rpx;
      color: #666;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }
    .active {
      border-left: 6rpx solid #ff6a3c;
      background: #fff;
      color: #ff6a3c;
    }
  }
  .classify_detail {
    position: relative;
    z-index: 999; // margin-left: -15rpx;
    background: #fff;
    padding: 15px 10px 0px 10px;
    .classify_item {
    }
    .title {
      font-size: 30rpx;
      color: #333;
      margin-left: 25rpx;
    }
    .children {
      display: flex;
      flex-wrap: wrap;
      margin: 20rpx 0rpx;
    }
    .child_image {
      width: 60px;
      height: 60px;
    }
    .child_name {
      font-size: 26rpx;
      color: #666;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 170rpx;
    }
    .children_item {
      width: 100%;
      text-align: left;
    }
  }
}
.van-card__img {
}
.van-card__thumb {
  width: 200rpx !important;
  height: 200rpx !important;
}
.van-card {
  padding: 8px 8px 8px 8px !important;
}
</style>

<template>
  <view class="container">
    <view
      class="classify"
      style="width: 100%; height: 100%"
    >
      <scroll-view
        class="classify_catetory"
        scroll-y
        scroll-with-animation="true"
        style="height:{{windowHeight}}px"
      >
        <view
          class="name {{item.active? 'active':''}}"
          wx:for="{{rootcateList}}"
          wx:key="item"
          @tap="changeCate"
          data-id="{{item.id}}"
        >{{ item.name }}</view>
      </scroll-view>
      <scroll-view
        class="classify_detail"
        scroll-y
        scroll-with-animation="true"
        style="height:{{windowHeight}}px"
      >
        <view class="children">
          <view
            class="children_item"
            wx:for="{{commodities}}"
            wx:for-item="item"
            wx:key="index"
          >
            <commodityitem
              @open-cart="openCart"
              width="{{windowWidth-130}}"
              itemid="{{item.id}}"
              name="{{item.name}}"
              photo="{{item.photo}}"
              priceRange="{{item.priceRange}}"
            />
          </view>
        </view>
      </scroll-view>
    </view>
    <van-popup
      bind:close="onClose"
      position="bottom"
      z-index="9999"
      show="{{ showSubdivide }}"
    >
      <commoditybottomsheet
        @add-into-cart="addItemIntoCart"
        defaultCount="1"
        windowWidth="{{windowWidth}}"
        commoditiy="{{currentCommoditiy}}"
      />
    </van-popup>
  </view>
</template>

<script>
import wepy from '@wepy/core';
import eventHub from '../common/eventHub';
import store from '../store';
import req from '../req';
import { buildPictureUrl } from '../utils/tools';
import { mapState, mapActions } from '@wepy/redux';
import { ADDINTOCART, REMOVEFROMCART } from '../store/types';

wepy.page({
  store,
  config: {
    navigationBarTitleText: 'test',
  },
  data: {
    showSubdivide: false,
    currentCommoditiy: {},
    rootcateList: [],
    windowHeight: 0,
    windowWidth: 0,
    commodities: [],
    iconSize: 33,
    beat: true,
    itemTypeCount: 0,
    animationCart: {},
    cart: [],
  },
  onReady: function() {
    this.animation = wx.createAnimation();
  },
  onLoad() {
    let that = this;
    wx.getSystemInfo({
      success: function(res) {
        that.windowHeight = res.windowHeight;
        that.windowWidth = res.windowWidth;
      },
    });
    this.getCategories();
  },
  computed: mapState(['cart']),
  methods: {
    ...mapActions({
      addIntoCart: ADDINTOCART,
      removeFromCart: REMOVEFROMCART,
    }),
    changeCart(e) {
      this.animation.scale(1.6).step();
      this.animation.scale(1).step();
      this.animationCart = this.animation.export();
    },
    handleViewTap() {
      console.log('handleVieTap clicked');
    },
    changeCate(e) {
      this.iconSize = 44;
      let id = e.currentTarget.dataset.id;
      //设置一级分类的选中状态
      for (var i = 0; i < this.rootcateList.length; i++) {
        var rootCate = this.rootcateList[i];
        rootCate.active = false;
        if (rootCate.id == id) {
          rootCate.active = true;
          this.getCommodities(id);
        }
      }
    },
    setCategories(categories) {
      var convertedCategories = (categories || []).map((x) => ({
        id: x.id,
        name: x.name,
        active: false,
      }));
      convertedCategories[0].active = true;
      this.rootcateList = convertedCategories;
      this.getCommodities(convertedCategories[0].id);
    },
    setCommodities(commodities) {
      var convertedCommodities = (commodities || []).map((x) =>
        Object.assign({}, x, {
          photo: buildPictureUrl(x.photo),
        })
      );
      this.commodities = convertedCommodities;
    },
    getCategories(id) {
      wx.showLoading({
        title: '请稍后...',
        icon: 'loading',
        mask: true,
      });
      req.commodity
        .getCategories()
        .then((res) => {
          if (res.success) {
            this.setCategories(res.categories);
            this.setCommodities(res.commodities);
          } else {
            wx.showToast({
              title: '信息获取失败1',
              icon: 'none',
            });
          }
          wx.hideLoading();
        })
        .catch((e) => {
          console.log(e);
          wx.hideLoading();
          wx.showToast({
            title: '信息获取失败2',
            icon: 'none',
          });
        });
    },
    getCommodities(categoryId) {
      wx.showLoading({
        title: '请稍后...',
        icon: 'loading',
        mask: true,
      });
      req.commodity
        .getCommoditiesByCategory({
          categoryId,
        })
        .then((res) => {
          if (res.success) {
            this.setCommodities(res.commodities);
            this.iconSize = 33;
          } else {
            wx.showToast({
              title: '信息获取失败',
              icon: 'none',
            });
          }
          wx.hideLoading();
        })
        .catch((e) => {
          wx.hideLoading();
          wx.showToast({
            title: '信息获取失败',
            icon: 'none',
          });
        });
    },
    openCart(id) {
      const commodity = this.commodities.find((x) => {
        return x.id == id;
      });
      if (commodity) {
        //open sub choose
        this.currentCommoditiy = commodity;
        this.showSubdivide = true;
      }
    },
    onClose() {
      this.showSubdivide = false;
    },
    addItemIntoCart(commodity, sku, count) {
      console.log(this.cart);
      this.addIntoCart({
        cartItem: {
          commodity,
          sku,
          count,
          checked: true,
        },
      });
      this.showSubdivide = false;
      if (this.cart.cartItems.length) {
        wx.setTabBarBadge({
          index: 1,
          text: '...',
        });
      }
    },
  },
});
</script>

<config>
{
    "navigationBarTitleText": "老三家",
    "usingComponents": {
      "van-button": "~@/components/vant/button",
      "van-goods-action": "~@/components/vant/goods-action",
      "van-goods-action-icon": "~@/components/vant/goods-action-icon",
      "van-goods-action-button": "~@/components/vant/goods-action-button",
      "van-icon": "~@/components/vant/icon",
      "van-card": "~@/components/vant/card",
      "van-stepper": "~@/components/vant/stepper",
      "commodityitem": "~@/components/commodityitem",
      "commodityiteminfo": "~@/components/commodityiteminfo",
      "commoditybottomsheet": "~@/components/commoditybottomsheet",
      "van-popup": "~@/components/vant/popup"
    }
}
</config>
