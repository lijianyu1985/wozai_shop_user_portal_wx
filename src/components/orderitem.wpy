<style type="less">
.orderitem {
  height: 100%;
  width: auto;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: space-between;
  box-sizing: border-box;
  margin: 4px 0px 3px 0px;
  background-color: var(--cell-background-color, #fff);
  color: var(--cell-text-color, #323233);
  font-size: var(--cell-font-size, 14px);
}
.header,
.body,
.footer-divider {
  width: 100%;
}
.footer {
  width: auto;
  margin: 16px 16px 16px 16px;
}
.image {
  margin: 2px 2px 2px 2px;
}
.images {
  margin: 2px 16px 2px 16px;
}
.total {
  display: flex;
  flex-direction: row;
  width: 100%;
}
.total-amount {
  color: red;
  margin-right: 16px;
}
.total-label {
  margin-left: auto;
}
</style>

<template>
  <view class="orderitem">
    <van-cell
      clickable
      title="{{item.orderNumber}}"
      value="{{statusText}}"
      class="header"
      is-link
      bind:click="onClick"
    >
      {{item.orderNumber}}
    </van-cell>
    <view class="body">
      <view class="images">
        <block
          wx:for="{{item.commodityItems}}"
          wx:for-item="item"
          wx:key="index"
        >
          <image
            class="image"
            cover
            lazy-load
            fit="cover"
            style="width:{{width*0.3}}px;height:{{width*0.3}}px;"
            src="{{item.commodity.photo}}"
          />
        </block>
      </view>
      <view class="total">
        <view class="total-label">合计：</view>
        <view class="total-amount">￥{{totalText}}</view>
      </view>
    </view>
    <van-divider
      class="footer-divider"
      custom-style="margin: 2px 10px 2px 10px;width:auto;"
    />
    <view class="footer">
      <view class="timestamp">{{timestamp}} </view>
    </view>
  </view>
</template>

<script>
import wepy from '@wepy/core';
import { buildPictureUrl, toDisplayTimestamp } from '../utils/tools';
wepy.component({
  props: {
    item: {},
    active: false,
    haseMore: false,
    tabIdx: 0,
    width: 0,
  },
  data: {
    windowHeight: 0,
    windowWidth: 0,
  },
  computed: {
    timestamp: function() {
      return toDisplayTimestamp(this.item && this.item.createdAt);
    },
    statusText: function() {
      return (
        this.item &&
        this.item.status &&
        this.item.status.current &&
        this.item.status.current.name
      );
    },
    totalText: function() {
      return (
        this.item &&
        this.item.rate &&
        this.item.rate.total &&
        this.item.rate.total.toFixed(2)
      );
    },
  },
  methods: {
    onClick(e) {
      this.$emit('order-item-click', this.item, e);
    },
  },
});
</script>

<config>
{
    "usingComponents": {
      "van-button": "~@/components/vant/button",
      "van-stepper": "~@/components/vant/stepper",
      "van-icon": "~@/components/vant/icon",
      "van-checkbox": "~@/components/vant/checkbox",
      "van-cell": "~@/components/vant/cell",
      "van-cell-group": "~@/components/vant/cell-group",
      "van-button": "~@/components/vant/button",
      "van-divider": "~@/components/vant/divider"
    }
}
</config>
